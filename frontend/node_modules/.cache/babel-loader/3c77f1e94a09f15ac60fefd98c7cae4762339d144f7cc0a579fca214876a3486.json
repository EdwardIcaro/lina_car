{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\lina_car\\\\frontend\\\\src\\\\components\\\\OCR\\\\PlateReader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tesseract from \"tesseract.js\";\nimport \"./PlateReader.css\";\nimport { FaCamera } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlateReader = ({\n  onPlateRecognized\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [videoStream, setVideoStream] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [videoReady, setVideoReady] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const startCamera = async () => {\n    setError(\"\");\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\"\n        }\n      });\n      setVideoStream(stream);\n      setVideoReady(false);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        console.log('Câmera ativada, stream:', stream);\n      }\n    } catch (err) {\n      setError(\"Permissão da câmera negada ou não disponível.\");\n      console.error('Erro ao acessar a câmera:', err);\n    }\n  };\n  const stopCamera = () => {\n    if (videoStream) {\n      videoStream.getTracks().forEach(track => track.stop());\n      setVideoStream(null);\n    }\n  };\n  const takePicture = async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    if (!video.videoWidth || !video.videoHeight) {\n      setError(\"Câmera não está pronta. Aguarde a imagem aparecer antes de capturar.\");\n      return;\n    }\n    const canvas = canvasRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const imageData = canvas.toDataURL(\"image/png\");\n    stopCamera();\n    await recognizePlate(imageData);\n  };\n  const recognizePlate = async imageData => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const {\n        data: {\n          text\n        }\n      } = await Tesseract.recognize(imageData, \"por\", {\n        logger: m => console.log(m)\n      });\n      const cleanedText = text.replace(/[^A-Za-z0-9]/g, \"\").toUpperCase();\n      if (onPlateRecognized) {\n        onPlateRecognized(cleanedText);\n      }\n    } catch (err) {\n      setError(\"Erro ao processar OCR. Tente novamente.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-text\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-text\",\n      children: \"Processando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this), !videoStream && !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"plate-reader-icon-btn\",\n      onClick: startCamera,\n      title: \"Ler Placa com C\\xE2mera\",\n      style: {\n        border: 'none',\n        background: 'none',\n        cursor: 'pointer',\n        padding: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FaCamera, {\n        size: 38,\n        color: \"#1976d2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), videoStream && !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"plate-reader-video\",\n        autoPlay: true,\n        playsInline: true,\n        style: {\n          marginBottom: 10,\n          background: '#222'\n        },\n        onLoadedMetadata: () => setVideoReady(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), !videoReady && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#d32f2f',\n          marginBottom: 8\n        },\n        children: \"Aguardando c\\xE2mera carregar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plate-reader-button\",\n        onClick: takePicture,\n        disabled: !videoReady,\n        children: \"Capturar Placa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(PlateReader, \"YRzQ3ovuK/mEOPWuLUFfKtd52s4=\");\n_c = PlateReader;\nPlateReader.propTypes = {\n  onPlateRecognized: PropTypes.func.isRequired\n};\nexport default PlateReader;\nvar _c;\n$RefreshReg$(_c, \"PlateReader\");","map":{"version":3,"names":["React","useState","useRef","PropTypes","Tesseract","FaCamera","jsxDEV","_jsxDEV","Fragment","_Fragment","PlateReader","onPlateRecognized","_s","isLoading","setIsLoading","videoStream","setVideoStream","error","setError","videoReady","setVideoReady","videoRef","canvasRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","console","log","err","stopCamera","getTracks","forEach","track","stop","takePicture","videoWidth","videoHeight","canvas","width","height","ctx","getContext","drawImage","imageData","toDataURL","recognizePlate","data","text","recognize","logger","m","cleanedText","replace","toUpperCase","style","display","justifyContent","alignItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","border","background","cursor","padding","size","color","ref","autoPlay","playsInline","marginBottom","onLoadedMetadata","disabled","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/Lenovo/lina_car/frontend/src/components/OCR/PlateReader.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport \"./PlateReader.css\";\r\nimport { FaCamera } from 'react-icons/fa';\r\n\r\nconst PlateReader = ({ onPlateRecognized }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [videoStream, setVideoStream] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [videoReady, setVideoReady] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const startCamera = async () => {\r\n    setError(\"\");\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { facingMode: \"environment\" }\r\n      });\r\n      setVideoStream(stream);\r\n      setVideoReady(false);\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        console.log('Câmera ativada, stream:', stream);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Permissão da câmera negada ou não disponível.\");\r\n      console.error('Erro ao acessar a câmera:', err);\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (videoStream) {\r\n      videoStream.getTracks().forEach(track => track.stop());\r\n      setVideoStream(null);\r\n    }\r\n  };\r\n\r\n  const takePicture = async () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    const video = videoRef.current;\r\n    if (!video.videoWidth || !video.videoHeight) {\r\n      setError(\"Câmera não está pronta. Aguarde a imagem aparecer antes de capturar.\");\r\n      return;\r\n    }\r\n    const canvas = canvasRef.current;\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    const imageData = canvas.toDataURL(\"image/png\");\r\n    stopCamera();\r\n    await recognizePlate(imageData);\r\n  };\r\n\r\n  const recognizePlate = async (imageData) => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const { data: { text } } = await Tesseract.recognize(imageData, \"por\", {\r\n        logger: m => console.log(m)\r\n      });\r\n      const cleanedText = text.replace(/[^A-Za-z0-9]/g, \"\").toUpperCase();\r\n      if (onPlateRecognized) {\r\n        onPlateRecognized(cleanedText);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Erro ao processar OCR. Tente novamente.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n      {error && <div className=\"error-text\">{error}</div>}\r\n      {isLoading && <div className=\"loading-text\">Processando...</div>}\r\n      {!videoStream && !isLoading && (\r\n        <button\r\n          className=\"plate-reader-icon-btn\"\r\n          onClick={startCamera}\r\n          title=\"Ler Placa com Câmera\"\r\n          style={{ border: 'none', background: 'none', cursor: 'pointer', padding: 0 }}\r\n        >\r\n          <FaCamera size={38} color=\"#1976d2\" />\r\n        </button>\r\n      )}\r\n      {videoStream && !isLoading && (\r\n        <>\r\n          <video\r\n            ref={videoRef}\r\n            className=\"plate-reader-video\"\r\n            autoPlay\r\n            playsInline\r\n            style={{ marginBottom: 10, background: '#222' }}\r\n            onLoadedMetadata={() => setVideoReady(true)}\r\n          />\r\n          {!videoReady && (\r\n            <div style={{ color: '#d32f2f', marginBottom: 8 }}>\r\n              Aguardando câmera carregar...\r\n            </div>\r\n          )}\r\n          <button className=\"plate-reader-button\" onClick={takePicture} disabled={!videoReady}>\r\n            Capturar Placa\r\n          </button>\r\n        </>\r\n      )}\r\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nPlateReader.propTypes = {\r\n  onPlateRecognized: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PlateReader; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAO,mBAAmB;AAC1B,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMoB,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMoB,SAAS,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BL,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMM,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAc;MACrC,CAAC,CAAC;MACFb,cAAc,CAACQ,MAAM,CAAC;MACtBJ,aAAa,CAAC,KAAK,CAAC;MACpB,IAAIC,QAAQ,CAACS,OAAO,EAAE;QACpBT,QAAQ,CAACS,OAAO,CAACC,SAAS,GAAGP,MAAM;QACnCQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,MAAM,CAAC;MAChD;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZhB,QAAQ,CAAC,+CAA+C,CAAC;MACzDc,OAAO,CAACf,KAAK,CAAC,2BAA2B,EAAEiB,GAAG,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIpB,WAAW,EAAE;MACfA,WAAW,CAACqB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACtDvB,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMwB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACnB,QAAQ,CAACS,OAAO,IAAI,CAACR,SAAS,CAACQ,OAAO,EAAE;IAC7C,MAAMF,KAAK,GAAGP,QAAQ,CAACS,OAAO;IAC9B,IAAI,CAACF,KAAK,CAACa,UAAU,IAAI,CAACb,KAAK,CAACc,WAAW,EAAE;MAC3CxB,QAAQ,CAAC,sEAAsE,CAAC;MAChF;IACF;IACA,MAAMyB,MAAM,GAAGrB,SAAS,CAACQ,OAAO;IAChCa,MAAM,CAACC,KAAK,GAAGhB,KAAK,CAACa,UAAU;IAC/BE,MAAM,CAACE,MAAM,GAAGjB,KAAK,CAACc,WAAW;IACjC,MAAMI,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,SAAS,CAACpB,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEe,MAAM,CAACC,KAAK,EAAED,MAAM,CAACE,MAAM,CAAC;IACvD,MAAMI,SAAS,GAAGN,MAAM,CAACO,SAAS,CAAC,WAAW,CAAC;IAC/Cf,UAAU,CAAC,CAAC;IACZ,MAAMgB,cAAc,CAACF,SAAS,CAAC;EACjC,CAAC;EAED,MAAME,cAAc,GAAG,MAAOF,SAAS,IAAK;IAC1CnC,YAAY,CAAC,IAAI,CAAC;IAClBI,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAM;QAAEkC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAMjD,SAAS,CAACkD,SAAS,CAACL,SAAS,EAAE,KAAK,EAAE;QACrEM,MAAM,EAAEC,CAAC,IAAIxB,OAAO,CAACC,GAAG,CAACuB,CAAC;MAC5B,CAAC,CAAC;MACF,MAAMC,WAAW,GAAGJ,IAAI,CAACK,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;MACnE,IAAIhD,iBAAiB,EAAE;QACrBA,iBAAiB,CAAC8C,WAAW,CAAC;MAChC;IACF,CAAC,CAAC,OAAOvB,GAAG,EAAE;MACZhB,QAAQ,CAAC,yCAAyC,CAAC;IACrD,CAAC,SAAS;MACRJ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKqD,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,GAC7E/C,KAAK,iBAAIV,OAAA;MAAK0D,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAE/C;IAAK;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAClDxD,SAAS,iBAAIN,OAAA;MAAK0D,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC/D,CAACtD,WAAW,IAAI,CAACF,SAAS,iBACzBN,OAAA;MACE0D,SAAS,EAAC,uBAAuB;MACjCK,OAAO,EAAE/C,WAAY;MACrBgD,KAAK,EAAC,yBAAsB;MAC5BX,KAAK,EAAE;QAAEY,MAAM,EAAE,MAAM;QAAEC,UAAU,EAAE,MAAM;QAAEC,MAAM,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAE,CAAE;MAAAX,QAAA,eAE7EzD,OAAA,CAACF,QAAQ;QAACuE,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACT,EACAtD,WAAW,IAAI,CAACF,SAAS,iBACxBN,OAAA,CAAAE,SAAA;MAAAuD,QAAA,gBACEzD,OAAA;QACEuE,GAAG,EAAEzD,QAAS;QACd4C,SAAS,EAAC,oBAAoB;QAC9Bc,QAAQ;QACRC,WAAW;QACXpB,KAAK,EAAE;UAAEqB,YAAY,EAAE,EAAE;UAAER,UAAU,EAAE;QAAO,CAAE;QAChDS,gBAAgB,EAAEA,CAAA,KAAM9D,aAAa,CAAC,IAAI;MAAE;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EACD,CAAClD,UAAU,iBACVZ,OAAA;QAAKqD,KAAK,EAAE;UAAEiB,KAAK,EAAE,SAAS;UAAEI,YAAY,EAAE;QAAE,CAAE;QAAAjB,QAAA,EAAC;MAEnD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,eACD9D,OAAA;QAAQ0D,SAAS,EAAC,qBAAqB;QAACK,OAAO,EAAE9B,WAAY;QAAC2C,QAAQ,EAAE,CAAChE,UAAW;QAAA6C,QAAA,EAAC;MAErF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH,eACD9D,OAAA;MAAQuE,GAAG,EAAExD,SAAU;MAACsC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACzD,EAAA,CAzGIF,WAAW;AAAA0E,EAAA,GAAX1E,WAAW;AA2GjBA,WAAW,CAAC2E,SAAS,GAAG;EACtB1E,iBAAiB,EAAER,SAAS,CAACmF,IAAI,CAACC;AACpC,CAAC;AAED,eAAe7E,WAAW;AAAC,IAAA0E,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}